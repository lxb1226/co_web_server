<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ubuntu升级cmake版本</title>
    <link href="/2022/07/20/ubuntu%E5%8D%87%E7%BA%A7cmake%E7%89%88%E6%9C%AC/"/>
    <url>/2022/07/20/ubuntu%E5%8D%87%E7%BA%A7cmake%E7%89%88%E6%9C%AC/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu升级cmake版本"><a href="#ubuntu升级cmake版本" class="headerlink" title="ubuntu升级cmake版本"></a>ubuntu升级cmake版本</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在wsl2的ubuntu20.04上编译某些库，发现有的CMakeLists需要的版本要求是3.14以上，而系统默认的版本是3.10。<br>因此需要升级一下cmake版本。</p><p>比较简单的做法是下载cmake压缩包，直接建立软链接覆盖掉系统的cmake。<a href="https://cmake.org/files/">压缩地址</a></p><h2 id="升级步骤"><a href="#升级步骤" class="headerlink" title="升级步骤"></a>升级步骤</h2><ol><li>下载cmake<br> 这里我下载的是cmake-3.18.0-Linux-x86_64.tar.gz<br> wget <a href="https://cmake.org/files/v3.18/cmake-3.18.0-Linux-x86_64.tar.gz">https://cmake.org/files/v3.18/cmake-3.18.0-Linux-x86_64.tar.gz</a></li><li>解压到/opt文件夹<br> tar -xzvf cmake-3.18.0-Linux-x86_64.tar.gz<br> mv cmake-3.18.0-Linux-x86_64.tar.gz /opt/cmake-3.18</li><li>创建软链接<br> sudo ln -sf /opt/cmake-3.18/bin/* /usr/bin</li><li>验证cmake版本<br> <img src="https://cdn.jsdelivr.net/gh/lxb1226/PicGobed/img/20220720105328.png" alt="20220720105328"></li></ol><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ul><li>千万不要执行<code>sudo apt-get autoremove cmake</code>这样会把之前cmake编译好的包都给卸载掉。</li><li>在创建软链接时，最好都给绝对地址</li><li>在创建软链接后，如果检查cmake版本没有用，最好检查软链接过程有没有问题。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>cmake</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+github搭建个人博客</title>
    <link href="/2022/07/17/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/07/17/hexo+github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="hexo介绍"><a href="#hexo介绍" class="headerlink" title="hexo介绍"></a>hexo介绍</h1><p><a href="https://hexo.io/zh-cn/index.html">hexo</a>是一个快速、简洁且高效的博客框架。</p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h3><p>直接到<a href="https://nodejs.org/en/download/">官网</a>上下载安装即可。</p><ul><li>Node.js</li><li>node自带npm</li><li>更新淘宝源<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">npm install -g cnpm --registry=https:<span class="hljs-regexp">//</span>registry.npm.taobao.org<br></code></pre></td></tr></table></figure>更新后，查看cnpm版本<br><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718104844.png?token=AH66AGCPYXT4HIYAQDUQZYTC2TFEW" alt="20220718104844"></li></ul><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>到git<a href="https://git-scm.com/downloads">官网</a>下载即可</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><h3 id="1-开始安装hexo"><a href="#1-开始安装hexo" class="headerlink" title="1.开始安装hexo"></a>1.开始安装hexo</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm install -g hexo-<span class="hljs-keyword">cli</span><br>或者<br>cnpm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>安装成功输入hexo -v即可看到hexo的版本。<br><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718105051.png?token=AH66AGBZ7EMSPQLOF67REDLC2TFMU" alt="20220718105051"></p><h3 id="2-初始化hexo，新建存储博客的文件夹"><a href="#2-初始化hexo，新建存储博客的文件夹" class="headerlink" title="2.初始化hexo，新建存储博客的文件夹"></a>2.初始化hexo，新建存储博客的文件夹</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">hexo <span class="hljs-keyword">init</span> myblog<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718105233.png?token=AH66AGC2VMQV3BF4Y3VZZKDC2TFS6" alt="20220718105233"></p><h3 id="3-安装依赖"><a href="#3-安装依赖" class="headerlink" title="3.安装依赖"></a>3.安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> myblog<br>cnpm install<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718113203.png?token=AH66AGEZG7HOW3DSAUWXHS3C2TKHC" alt="20220718113203"></p><h3 id="4-启动服务站点"><a href="#4-启动服务站点" class="headerlink" title="4.启动服务站点"></a>4.启动服务站点</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo g<br>hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718113318.png?token=AH66AGFL3VVCVS6KP4WWHULC2TKLY" alt="20220718113318"><br><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718113338.png?token=AH66AGBA4DN7H6S3G5JABX3C2TKNA" alt="20220718113338"></p><h2 id="在github上建站访问"><a href="#在github上建站访问" class="headerlink" title="在github上建站访问"></a>在github上建站访问</h2><h3 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h3><p>仓库名为：用户名+github.io<br>如：<br><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718113443.png?token=AH66AGGPAFHUPFZCMTKMPRLC2TKRC" alt="20220718113443"></p><h3 id="安装hexo上传插件"><a href="#安装hexo上传插件" class="headerlink" title="安装hexo上传插件"></a>安装hexo上传插件</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">cnpm install hexo-deployer-git <span class="hljs-comment">--save</span><br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718002202.png?token=AH66AGAWYG2XB5TI2P7XTFLC2Q3WS" alt="20220718002202"></p><h3 id="修改hexo配置文件指定仓库路径"><a href="#修改hexo配置文件指定仓库路径" class="headerlink" title="修改hexo配置文件指定仓库路径"></a>修改hexo配置文件指定仓库路径</h3><p>修改_config.yml中的以下位置即可</p><p>将repository修改为你的仓库所在地即可。<br><img src="https://raw.githubusercontent.com/lxb1226/PicGobed/master/img/20220718104307.png?token=AH66AGBQ7F2LJQFL4YGV4ETC2TEPS" alt="20220718104307"></p><h3 id="将hexo博客站点上传到github上"><a href="#将hexo博客站点上传到github上" class="headerlink" title="将hexo博客站点上传到github上"></a>将hexo博客站点上传到github上</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo d</span><br></code></pre></td></tr></table></figure><h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">hexo</span> init<span class="hljs-meta"> [folder]</span><br></code></pre></td></tr></table></figure><p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss">hexo <span class="hljs-keyword">new</span> [layout] &lt;<span class="hljs-built_in">title</span>&gt;<br></code></pre></td></tr></table></figure><p>新建一篇文章。如果没有设置 layout 的话，默认使用 _config.yml 中的 default_layout 参数代替。如果标题包含空格的话，请使用引号括起来。</p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">generate</span><br>或<br>hexo g<br></code></pre></td></tr></table></figure><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-d,–deploy</td><td>文件生成后立即部署网站</td></tr><tr><td>-w,–watch</td><td>监视文件改动</td></tr><tr><td>-b,–bail</td><td>生成过程中如果发生任何未处理的异常则抛出异常</td></tr></tbody></table><h3 id="public"><a href="#public" class="headerlink" title="public"></a>public</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xml">hexo publish [layout] <span class="hljs-tag">&lt;<span class="hljs-name">filename</span>&gt;</span><br></code></pre></td></tr></table></figure><p>发表草稿</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/%E3%80%82">http://localhost:4000/。</a></p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo deploy</span><br></code></pre></td></tr></table></figure><p>部署网站</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">hexo clean</span><br></code></pre></td></tr></table></figure><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>二分查找</title>
    <link href="/2022/05/29/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/"/>
    <url>/2022/05/29/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h1><h2 id="1-二分查找的概念"><a href="#1-二分查找的概念" class="headerlink" title="1.二分查找的概念"></a>1.二分查找的概念</h2><p>二分查找的基本思想是将n个元素分成大致相等的两部分，取a[n/2]与x做比较：</p><ol><li>如果x=a[n/2]，则找到x，算法终止</li><li>如果x &lt; a[n/2]，则只需要在数组a的左半部分继续搜索x</li><li>如果x &gt; a[n/2]，则只需要在数组a的右半部分继续搜索x</li></ol><p>二分查找的时间复杂度为$O(n)=O(log(N))$</p><h2 id="2-常见类型"><a href="#2-常见类型" class="headerlink" title="2.常见类型"></a>2.常见类型</h2><h3 id="2-1-最基本的二分查找"><a href="#2-1-最基本的二分查找" class="headerlink" title="2.1 最基本的二分查找"></a>2.1 最基本的二分查找</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">search</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = n - <span class="hljs-number">1</span>; <br>        <span class="hljs-comment">// 左闭右闭</span><br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-keyword">int</span> mid = l + (r - l) / <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[mid] == target)&#123;<br>                <span class="hljs-keyword">return</span> mid;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(nums[mid] &gt; target)&#123;<br>                r = mid - <span class="hljs-number">1</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                l = mid + <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="2-2-查找目标值区域的左-右边界"><a href="#2-2-查找目标值区域的左-右边界" class="headerlink" title="2.2 查找目标值区域的左/右边界"></a>2.2 查找目标值区域的左/右边界</h3><p>与该题型相似的表述有：查找与目标值相等的第一个位置/查找不小于目标值数的位置/查找与目标值相等的最后一个位置/查找大于等于目标值数的的位置</p><ul><li>查找目标值区域的左边界  与该表述相似的有：查找与目标值相等的第一个位置/查找不大于目标值数的位置  也可以表述为：查找最后一个小于目标值的数/查找与目标值小但是最接近目标值的数。  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 查找与目标值相等的第一个位置</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">search</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> target)</span></span>&#123;<br>    <span class="hljs-keyword">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>    <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = n - <span class="hljs-number">1</span>, ans = n;<br>    <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>        <span class="hljs-keyword">int</span> mid = l + ((r - l) &gt;&gt; <span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">if</span>(nums[mid] &gt;= target)&#123;<br>            r = mid - <span class="hljs-number">1</span>;<br>            ans = mid;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            l = mid + <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> ans;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>查找目标值区域的右边界  与该表述相似的有：查找与目标值相等的最后一个位置/查找第一个大于目标值数的位置  也可以表述为：查找第一个大于目标值的数/查找比目标值大但是最接近目标值的数。因为我们已经找到了最后一个不大于目标值的数，那么再往后进一位，就是第一个大于目标值的数。  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">// 查找与目标值相等的最后一个位置</span><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">search</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> target)</span></span>&#123;<br>        <span class="hljs-keyword">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = n - <span class="hljs-number">1</span>, ans = n;<br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-keyword">int</span> mid = l + ((r - l) &gt;&gt; <span class="hljs-number">1</span>);<br>            <span class="hljs-keyword">if</span>(nums[mid] &gt; target)&#123;<br>                r = mid - <span class="hljs-number">1</span>;<br>                ans = mid;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                l = mid + <span class="hljs-number">1</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> ans;<br>    &#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="2-3-部分有序的情况"><a href="#2-3-部分有序的情况" class="headerlink" title="2.3 部分有序的情况"></a>2.3 部分有序的情况</h3><p>当数组呈现为部分有序的情况，例如有序数组进行了旋转，这时候数组分为了两部分，且这两部分分别有序，此时仍然可以用二分查找。</p><p>此时可以将数组一分为二，其中一定有一个是有序的，另一个可能是有序，也可能是部分有序。此时有序部分用二分查找，无序部分再一分为二，其中一个一定有序，另一个可能有序，可能无序。依次循环即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">search</span><span class="hljs-params">(vector&lt;<span class="hljs-keyword">int</span>&gt;&amp; nums, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> n = nums.<span class="hljs-built_in">size</span>();<br>        <br>        <span class="hljs-keyword">int</span> l = <span class="hljs-number">0</span>, r = n - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(l &lt;= r)&#123;<br>            <span class="hljs-keyword">int</span> mid = (l + r) / <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">if</span>(nums[mid] == target)&#123;<br>                <span class="hljs-keyword">return</span> mid;<br>            &#125;<br>            <span class="hljs-keyword">if</span>(nums[mid] &lt;= nums[n - <span class="hljs-number">1</span>])&#123;<br>                <span class="hljs-comment">// 右边有序 [mid, r]</span><br>                <span class="hljs-keyword">if</span>(nums[mid] &lt; target &amp;&amp; target &lt;= nums[n - <span class="hljs-number">1</span>])&#123;<br>                    l = mid + <span class="hljs-number">1</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    r = mid - <span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-comment">// 左边有序 [l, mid]</span><br>                <span class="hljs-keyword">if</span>(nums[mid] &gt; target &amp;&amp; target &gt;= nums[<span class="hljs-number">0</span>])&#123;<br>                    r = mid - <span class="hljs-number">1</span>;<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    l = mid + <span class="hljs-number">1</span>;<br>                &#125;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">-1</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="2-4-二维数组的查找"><a href="#2-4-二维数组的查找" class="headerlink" title="2.4 二维数组的查找"></a>2.4 二维数组的查找</h3><p>要对二维数组使用二分查找，一般要从二维数组的四个顶点入手。找到一个顶点，使得从这个顶点出发，一个方向是递减的，一个方向是递增的。那么只需要判断这个顶点和目标值的大小，就可以确定坐标的移动方向。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">searchMatrix</span><span class="hljs-params">(vector&lt;vector&lt;<span class="hljs-keyword">int</span>&gt;&gt;&amp; matrix, <span class="hljs-keyword">int</span> target)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> m = matrix.<span class="hljs-built_in">size</span>(), n = matrix[<span class="hljs-number">0</span>].<span class="hljs-built_in">size</span>();<br>        <span class="hljs-keyword">int</span> row = <span class="hljs-number">0</span>, col = n - <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span>(row &lt; m &amp;&amp; col &gt;= <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">if</span>(matrix[row][col] == target)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(matrix[row][col] &gt; target)&#123;<br>                <span class="hljs-comment">// 向左</span><br>                col--;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-comment">// 向右</span><br>                row++;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="3-例题"><a href="#3-例题" class="headerlink" title="3.例题"></a>3.例题</h2><ol><li><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/">34. 在排序数组中查找元素的第一个和最后一个位置 - 力扣（LeetCode）</a></li><li><a href="https://leetcode.cn/problems/search-in-rotated-sorted-array/">33. 搜索旋转排序数组 - 力扣（LeetCode）</a></li><li><a href="https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array/">153. 寻找旋转排序数组中的最小值 - 力扣（LeetCode）</a></li><li><strong><strong><a href="https://leetcode.cn/problems/search-a-2d-matrix/">74. 搜索二维矩阵</a></strong></strong></li><li><a href="https://leetcode.cn/problems/search-a-2d-matrix-ii/">240. 搜索二维矩阵 II - 力扣（LeetCode）</a></li></ol><h2 id="4-参考链接"><a href="#4-参考链接" class="headerlink" title="4.参考链接"></a>4.参考链接</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/42185010">[算法总结] 二分查找 - 知乎 (zhihu.com)</a></li><li><a href="https://segmentfault.com/a/1190000016825704">二分查找、二分边界查找算法的模板代码总结 - SegmentFault 思否</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>leetcode</tag>
      
      <tag>算法</tag>
      
      <tag>二分查找</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>gdb入门教程</title>
    <link href="/2022/01/08/gdb%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2022/01/08/gdb%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="gdb入门教程"><a href="#gdb入门教程" class="headerlink" title="gdb入门教程"></a>gdb入门教程</h1><p>Last Edited: January 8, 2022 10:20 AM</p><h2 id="1-编译一个带debug的程序"><a href="#1-编译一个带debug的程序" class="headerlink" title="1.编译一个带debug的程序"></a>1.编译一个带debug的程序</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">gcc - ggdb -Wall -o gdbtest gdbtest.c<br><span class="hljs-comment"># -g: 这个选项增加一个debug信息到操作系统的格式中</span><br><span class="hljs-comment"># --ggdb: 它产生一个debug信息</span><br><span class="hljs-comment"># -Wall: 它开启代码中所有的警告</span><br></code></pre></td></tr></table></figure><h2 id="2-用gdb运行一个程序"><a href="#2-用gdb运行一个程序" class="headerlink" title="2.用gdb运行一个程序"></a>2.用gdb运行一个程序</h2><ul><li><p>运行一个不带参数的程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gdb program <span class="hljs-comment"># 法一</span><br>run or r <span class="hljs-comment">#法二</span><br></code></pre></td></tr></table></figure></li><li><p>运行一个带参数的程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">gdb --args program arg1 arg2 ... argN <span class="hljs-comment"># 法一</span><br>r arg1 arg2 ... argN <span class="hljs-comment"># 法二</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="3-打印源代码在gdb的控制台"><a href="#3-打印源代码在gdb的控制台" class="headerlink" title="3.打印源代码在gdb的控制台"></a>3.打印源代码在gdb的控制台</h2><p>利用命令 l or list就可以打印10行源代码。</p><p>在list命令后面跟上一个<a line number>或<a function name>来告诉gdb从哪里开始。</p><h2 id="4-运行"><a href="#4-运行" class="headerlink" title="4.运行"></a>4.运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">c <span class="hljs-comment"># 继续执行</span><br>n <span class="hljs-comment"># 执行下一行</span><br>s <span class="hljs-comment"># 单步执行</span><br>q <span class="hljs-comment"># 退出</span><br></code></pre></td></tr></table></figure><h2 id="5-断点"><a href="#5-断点" class="headerlink" title="5.断点"></a>5.断点</h2><ul><li><p>在一行或者一个函数处设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">break</span> linenum(b as shortcut) <span class="hljs-comment"># 在一行设置断点</span><br>b <span class="hljs-keyword">function</span> <span class="hljs-comment"># 在一个函数处设置断点</span><br></code></pre></td></tr></table></figure></li><li><p>在和当前行相关的一行设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b +linenum<br></code></pre></td></tr></table></figure></li><li><p>在一个给定文件的函数处设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b filename:<span class="hljs-keyword">function</span><br></code></pre></td></tr></table></figure></li><li><p>在一个给定文件的一行处设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b filename:linenum<br></code></pre></td></tr></table></figure></li><li><p>在某个内存地址处设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b *(memory address)<br></code></pre></td></tr></table></figure></li><li><p>在某个条件后设置断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">b &lt;...&gt; <span class="hljs-keyword">if</span> conditon<br></code></pre></td></tr></table></figure></li><li><p>跳过或者忽略断点</p><p>首先，确定你想要的取消的断点的序号。利用以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">info breakpoints<br></code></pre></td></tr></table></figure><p>再利用<strong>ignore</strong>就可以忽略断点。</p></li><li><p>移除断点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">d &lt;&lt;<span class="hljs-string">breakpoint num&gt;&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="6-打印debug-info"><a href="#6-打印debug-info" class="headerlink" title="6.打印debug info"></a>6.打印debug info</h2><p>在程序到达断点后取执行命令。</p><p>利用<strong>command</strong>命令，你可以在每次遇到断点后设置多个命令。</p><ul><li><p>在断点后打印backtrace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">backtrace(or bt as shortcut)<br>or<br>info stack<br></code></pre></td></tr></table></figure></li><li><p>在断点后执行函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">fin<br></code></pre></td></tr></table></figure></li><li><p>打印当前执行程序的栈</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">where</span><br></code></pre></td></tr></table></figure></li><li><p>在debug时打印当前的行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">frame<br></code></pre></td></tr></table></figure></li></ul><h2 id="7-追踪变量"><a href="#7-追踪变量" class="headerlink" title="7.追踪变量"></a>7.追踪变量</h2><ul><li><p>打印标准变量（int,char,etc.)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p &lt;&lt;<span class="hljs-string">variable&gt;&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>打印结构变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p &lt;&lt;<span class="hljs-string">structure&gt;&gt;</span><br></code></pre></td></tr></table></figure></li><li><p>打印指针变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p &lt;&lt;*ptr&gt;&gt;<br></code></pre></td></tr></table></figure></li><li><p>打印宏变量</p><p>打印一个宏需要使用一个额外的选项来编译程序。利用**-ggdb3**选项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">p/x DEG_FLAG<br></code></pre></td></tr></table></figure></li><li><p>增加watchers</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">watch &lt;&lt;<span class="hljs-string">variable&gt;&gt;</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="8-常见命令"><a href="#8-常见命令" class="headerlink" title="8.常见命令"></a>8.常见命令</h2><table><thead><tr><th>命令</th><th>简写</th><th>作用</th></tr></thead><tbody><tr><td>file</td><td>fil</td><td>载入可执行文件</td></tr><tr><td>list</td><td>l</td><td>打印源代码</td></tr><tr><td>quit</td><td>q</td><td>退出gdb</td></tr><tr><td>break</td><td>b</td><td>设置断点</td></tr><tr><td>run</td><td>r</td><td>从头运行程序</td></tr><tr><td>continue</td><td>c</td><td>从当前位置继续运行程序</td></tr><tr><td>until</td><td>u</td><td>从当前位置继续运行，直到指定行号</td></tr><tr><td>next</td><td>n</td><td>单步执行</td></tr><tr><td>step</td><td>s</td><td>单步执行</td></tr><tr><td>print</td><td>p</td><td>打印一次值</td></tr><tr><td>display</td><td>disp</td><td>设置某个变量/函数总是显示</td></tr><tr><td>info</td><td>i</td><td>打印相关类型的信息</td></tr><tr><td>disable</td><td>dis</td><td>临时禁用某些东西</td></tr><tr><td>delete</td><td>d</td><td>删除某些东西</td></tr><tr><td>enable</td><td>en</td><td>启用某些东西</td></tr><tr><td>help</td><td>h</td><td>获取帮助</td></tr></tbody></table><h2 id="9-参考链接"><a href="#9-参考链接" class="headerlink" title="9.参考链接"></a>9.参考链接</h2><ol><li><a href="https://www.techbeamers.com/how-to-use-gdb-top-debugging-tips/">https://www.techbeamers.com/how-to-use-gdb-top-debugging-tips/</a></li><li><a href="https://www.cs.cmu.edu/~gilpin/tutorial/">https://www.cs.cmu.edu/~gilpin/tutorial/</a></li><li><a href="https://www.cnblogs.com/AFewMoon/p/14322331.html">较详细的gdb入门教程 - AFewMoon - 博客园 (cnblogs.com)</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>gdb</tag>
      
      <tag>cpp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
